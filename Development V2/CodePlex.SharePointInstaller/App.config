<?xml version="1.0" encoding="utf-8"?>
<!-- SAMPLE CONFIGURATION FILE FOR SHAREPOINT SOLUTIONS INSTALLER -->
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net, Version=1.2.10.0, Culture=neutral, PublicKeyToken=1b44e1d426115821" />
    <section name="install" type="CodePlex.SharePointInstaller.Configuration.InstallConfiguration, Setup, Version=1.0.0.0, Culture=neutral, PublicKeyToken=cb87ba0215b862e1"/>
    <section name="commands" type="CodePlex.SharePointInstaller.Configuration.CommandsConfiguration, Setup, Version=1.0.0.0, Culture=neutral, PublicKeyToken=cb87ba0215b862e1" />
  </configSections>
  <appSettings>
    <add key="BannerImage" value="Default"/>
    <add key="LogoImage" value="None"/>
    <add key="Vendor" value=""/>
    <add key="EULA" value="Resources\EULA.rtf"/>
    <add key="AllowUpgrade" value="true"/>
    <add key="UpgradeDescription" value="Upgrades {SolutionTitle} on all frontend web servers in the SharePoint farm."/>
    <add key="RequireDeploymentToCentralAdminWebApplication" value="false"/>
    <add key="InstallationName" value="Demo Solution and Test Set of Empty Features"/>
    <add key="ClientSettingsProvider.ServiceUri" value="" />
    <add key="RequireMoss" value="MOSS"/>
    <add key="Require2010" value="SPS"/>
    <add key="RequireDeploymentToCentralAdminWebApplication" value="false"/>
    <add key="RequireDeploymentToAllContentWebApplications" value="false"/>
    <add key="DefaultDeployToAdminWebApplications" value="false"/>
    <add key="DefaultDeployToContentWebApplications" value="false"/>
  </appSettings>
  <install>
    <solutions xmlns="http://sharepointinstaller.codeplex.com/config">
      <solution id="0399F229-136F-4f6c-AC47-8654CAE1984C">
        <parameters>
          <!--
          Required parameters describe the solution title, version, and path to the WSP file
          (the latter actually could be omitted when you know that this solution is already installed
          and just needs to be removed). The GUID of the solution must be specified as indicated in
          the manifest.xml file within WSP. The installer will need this to detect any existing solution
          in the SharePoint solution store. Optionally it is possible to specify a URL which will then be
          used to have already selected hard option when it prompts to select Deployment Targets. Action
          parameter is also optional and is used to explicitly specify the action to perform with the solution
          instead of delegating this choice to the user. Another useful parameter is Boolean ReactivateFeatures
          optional setting which is only taken into account when used with Upgrade action. Setting it to False
          allows skipping features deactivate step before upgrading as well as activating is not performed after
          the upgrade. This is particularly useful for upgrading currently running workflows.
          -->
          <parameter name="Title" value="Demo Solution"/>
          <parameter name="File" value="Resources\DemoSolution.wsp"/>
          <parameter name="Version" value="1.0.0.0"/>
          <parameter name="Url" value="http://localhost"/>
        </parameters>
        <features>
          <!--
          Features list can contain features of different scope, and they will be activated according to the selected
          deployment targets. However, web scoped features will remain visible (though deactivated) at all levels in all
          site collections in all web applications in the whole farm, and site scoped features can be still seen at the top
          level in the site collection administrators area for every site collection of each web application of the whole
          farm. Optionally URL parameter indicates the only target for feature activation. When it’s specified the feature
          will only be activated under the given URL (if object of a proper scope exists there). It’s also possible to mark
          a feature with “deactivateonly” parameter set to True. This is particularly useful for a repair scenario when
          certain features have been removed from the solution but they still need to be deactivated before retraction. 
          Optional name attribute defines a friendly name to display during the installation progress.
          -->
          <feature name="MondosoftDemoFeature" id="159B735F-ADD5-45db-A232-BE5AF892B313" scope="Farm"/>
        </features>
      </solution>
      <solution id="1b7b116f-485c-4bc8-99ae-74b198d4934e">
        <parameters>
          <parameter name="Title" value="Test solution with empty features of different scope"/>
          <parameter name="File" value="Resources\Test_Solution_1.wsp"/>
          <parameter name="Version" value="1.0.0.0"/>
        </parameters>
        <features>
          <feature name="Test Feature 1" id="D4A884B6-B0A0-47ee-AA3F-7E3D8A31935A" scope="Farm"/>
          <feature name="Test Feature 2" id="945EBF65-BC90-424b-B1A2-2F4D8FC70C2A" scope="WebApplication"/>
          <!-- the next one will be activated with a post-install command -->
          <feature name="Test Feature 3" id="5571848D-96D4-4336-9D90-1D148FF8F098" scope="Site" deactivateonly="true"/>
          <feature name="Test Feature 4" id="9B805259-D588-4d07-9D6B-EF92DA875DC1" scope="Web" url="http://localhost"/>
        </features>
        <run>
          <!--
          Post-install commands are listed in the run section with their syntax maximally similar to that one used by STSADM tool.
          Commands can contain placeholders: {AppURL}, {SiteURL}, {WebURL}. Those will be resolved (only during Install or Repair
          action) correspondingly into URLs of web applications, site collections, and site chosens as a deployment target. The
          resolution algorithm replaces each placeholder with its value. When several values are applicable (e.g. using {SiteURL} and
          selecting two site collections as a deployment target) the command is executed multiple times having the placeholder
          replaced with every value. In case there are several different placeholders each having multiple replacements available
          (e.g. using {SiteURL} and {WebURL}, then selecting two site collections and their root webs as a deployment target), all the
          values are resolved and the distinct set of command lines is executed one by one. Given this logic, it is highly recommended
          to use placeholders of the same type within a single command.
          
          Any command listed in this section must have a corresponding entry in the available commands list otherwise the solution
          validation would not be passed.
          -->
          <command name="clearlist" commandline="-url {WebURL}/Lists/Announcements/AllItems.aspx"/>
          <command name="removelinkfromquicklaunch" commandline="-url {SiteURL} -title &quot;Team Discussion&quot; -section &quot;Discussions&quot;" />
          <command name="activatefeaturecommand" commandline="-url {SiteURL} -scope Site -featureid &quot;5571848D-96D4-4336-9D90-1D148FF8F098&quot;" />
        </run>
      </solution>
    </solutions>
  </install>
  <!-- This external file is autogenerated from stsadmcommands.ReusableCommands.xml in Stsadm.Commands. It contains command declarations. -->
  <commands configSource="commands.xml" />
  <log4net>
    <appender name="LogFileAppender" type="log4net.Appender.RollingFileAppender">
      <param name="File" value="SharePointInstaller.log" />
      <param name="AppendToFile" value="true" />
      <rollingStyle value="Date" />
      <datePattern value="yyyy-MM-dd" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%d %username [%t] %-5p %c [%x] &lt;%X{auth}&gt; - %m%n" />
      </layout>
    </appender>
    <root>
      <priority value="DEBUG" />
      <appender-ref ref="LogFileAppender" />
    </root>
  </log4net>
  <system.web>
    <membership defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" />
      </providers>
    </membership>
    <roleManager defaultProvider="ClientRoleProvider" enabled="true">
      <providers>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400" />
      </providers>
    </roleManager>
  </system.web>
</configuration>